{"version":3,"sources":["components/sidebar.js","components/About.js","components/TimeLine.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","href","className","data-toggle","data-target","aria-expanded","aria-controls","id","style","backgroundImage","role","data-nav-section","target","rel","aria-hidden","Component","About","data-section","data-animate-effect","Timeline","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4f4fbba6.chunk.js","sourcesContent":["/**\n * \n */\nimport React, { Component } from 'react'\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <nav href=\"#navbar\" className=\"js-colorlib-nav-toggle colorlib-nav-toggle\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\"><i /></nav>\n          <aside id=\"colorlib-aside\" className=\"border js-fullheight\" style={{backgroundImage: 'url(images/background-site.jpg)'}}>\n            <div className=\"text-center\">\n              <div className=\"author-img\" style={{backgroundImage: 'url(images/me2.jpg)'}} />\n              <h1 id=\"colorlib-logo\"><a href=\"index.html\">Brad Luken</a></h1>\n              <span className=\"email\"><i className=\"icon-mail\"></i>bhl12334@gmail.com</span>\n            </div>\n            <nav id=\"colorlib-main-menu\" role=\"navigation\" className=\"navbar\">\n              <div id=\"navbar\" className=\"collapse\">\n                <ul>\n                  \n                  <li><a href=\"#about\" data-nav-section=\"about\">About</a></li>\n                  {/*<li><a href=\"#\" data-nav-section=\"projects\">Projects</a></li>\n                  <li><a href=\"#\" data-nav-section=\"blog\">Blog</a></li>*/}\n                  <li><a href=\"#timeline\" data-nav-section=\"timeline\">Timeline</a></li>\n                </ul>\n              </div>\n            </nav>\n            <nav id=\"colorlib-main-menu\">\n              <ul>\n                <li><a href=\"https://github.com/bhl12345\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"icon-github\"></i></a></li>\n              </ul>\n            </nav>\n            <div className=\"colorlib-footer\">\n              <p><small>\n                  Made with <i className=\"icon-heart\" aria-hidden=\"true\" /> and <i className=\"icon-beer\" aria-hidden=\"true\"></i><br></br>\n                  Thanks <a href=\"https://colorlib.com\" target=\"_blank\" rel=\"noopener noreferrer\">Colorlib</a> for inspiration \n              </small></p>\n              <p><small>\n                Still Under Construction !!\n              </small></p>\n            </div>\n          </aside>\n        </div>\n      </div>\n    )\n  }\n}","/**\n * \n */\nimport React, { Component } from 'react'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div style={{backgroundImage: 'url(images/background-site.jpg)'}}>\n        <section className=\"colorlib-about\" data-section=\"about\">\n        <div className=\"colorlib-narrow-content\">\n            <div className=\"row\">\n            <div className=\"col-md-12\">\n                <div className=\"row row-bottom-padded-sm animate-box\" data-animate-effect=\"fadeInLeft\">\n                <div className=\"col-md-12\">\n                    <div className=\"about-desc\">\n                    <span className=\"heading-meta\">About</span>\n                    <h2 className=\"colorlib-heading\">Who Am I?</h2>\n                    <p>I have been an IT professional since 1998. Technology changes quick \n                    and for over 20 years I have learned and adapted to many of those changes. \n                    I am a person who thrives on new challenges. To me that is what makes the industry so exciting and self satisfying. </p>\n                    <p></p>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        </section>\n        <section className=\"colorlib-about\">\n        <div className=\"colorlib-narrow-content\">\n            <div className=\"row\">\n            <div className=\"col-md-6 col-md-offset-3 col-md-pull-3 animate-box\" data-animate-effect=\"fadeInLeft\">\n                <span className=\"heading-meta\"></span>\n                <h2 className=\"colorlib-heading\">Tools I have used in the System Development Life Cycle</h2>\n            </div>\n            </div>\n            <div className=\"row row-pt-md\">\n            <div className=\"col-md-4 text-center animate-box\">\n                <div className=\"services color-1\">\n                <span className=\"icon\">\n                    <i className=\"icon-bulb\" />\n                </span>\n                <div className=\"desc\">\n                    <h3>Development Technologies</h3>\n                    <p>Java , JPA ,Spring JPA , Spring Boot, Maven , React , Hibernate , Spring Restful Services ,\n                    Spring Tool Suite ,  Eclipse multiple versions,\n                    JavaScript, HTML, XML, CSS, VB, SQL, PostgresSQL, \n                    Github, Gradle, VS Code, NPM, Apache-Tomcat, Glassfish, Web-sphere 7.5 -8.5 , \n                    New Relic Application Performance Monitor,  Liquibase,  Squirrel, Toad, ElipseLink, VSTS, \n                    CVS code repository, SVN code Repository, WinSCP, Microsoft Installer, Visual Studio, Microsoft Office Suite, SmartGWT,\n                    JIRA,Tortoise HG, Mercurial, JUnit, Mockito, Toad for Oracle, Apache-Tomcat, </p>\n                </div>\n                </div>\n            </div>\n            <div className=\"col-md-4 text-center animate-box\">\n                <div className=\"services color-3\">\n                <span className=\"icon\">\n                    <i className=\"icon-monitor\" />\n                </span>\n                <div className=\"desc\">\n                    <h3>Operating Systems</h3>\n                    <p>Windows up to version 10, Mac , Unix, VMS, </p>\n                </div>\n                </div>\n            </div>\n            <div className=\"col-md-4 text-center animate-box\">\n                <div className=\"services color-5\">\n                <span className=\"icon\">\n                    <i className=\"icon-data\" />\n                </span>\n                <div className=\"desc\">\n                    <h3>Databases</h3>\n                    <p> Oracle 12, Oracle 11, IBM DB2, SQL Server, MySql, Oracle RDB</p>\n                </div>\n                </div>\n            </div>\n            {/*\n\t\t\t\t * <div className=\"col-md-4 text-center animate-box\"> <div\n\t\t\t\t * className=\"services color-2\"> <span className=\"icon\"> <i\n\t\t\t\t * className=\"icon-data\" /> </span> <div className=\"desc\"> <h3>Dev\n\t\t\t\t * Ops</h3> <p>Jenkins , Kubernetes , Docker </p> </div>\n\t\t\t\t * </div> </div> <div className=\"col-md-4 text-center\n\t\t\t\t * animate-box\"> <div className=\"services color-4\"> <span\n\t\t\t\t * className=\"icon\"> <i className=\"icon-layers2\" /> </span> <div\n\t\t\t\t * className=\"desc\"> <h3>Graphic Design</h3> <p>My friend\n\t\t\t\t * knows .. P</p> </div> </div> </div> <div className=\"col-md-4\n\t\t\t\t * text-center animate-box\"> <div className=\"services color-6\">\n\t\t\t\t * <span className=\"icon\"> <i className=\"icon-phone3\" /> </span>\n\t\t\t\t * <div className=\"desc\"> <h3>Digital Marketing</h3> <p>I use\n\t\t\t\t * Instagram eight hours a day :) </p> </div> </div> </div>\n\t\t\t\t */}\n            </div>\n        </div>\n        </section>\n      </div>\n    )\n  }\n}","/**\n * \n */\nimport React, { Component } from 'react'\n\nexport default class Timeline extends Component {\n  render() {\n    return (\n      <div style={{backgroundImage: 'url(images/background-site.jpg)'}}>\n        <section className=\"colorlib-experience\" data-section=\"timeline\">\n          <div className=\"colorlib-narrow-content\">\n            <div className=\"row\">\n              <div className=\"col-md-6 col-md-offset-3 col-md-pull-3 animate-box\" data-animate-effect=\"fadeInLeft\">\n                <span className=\"heading-meta\"></span>\n                <h2 className=\"colorlib-heading animate-box\">History</h2>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"timeline-centered\">\n                  <article className=\"timeline-entry animate-box\" data-animate-effect=\"fadeInLeft\">\n                    <div className=\"timeline-entry-inner\">\n                      <div className=\"timeline-icon color-3\">\n                        <i className=\"icon-pen2\" />\n                      </div>\n                      <div className=\"timeline-label\">\n                        <h2>Private Development <span>2020-present</span></h2>\n                        <p> I have been doing private development including this site.\n                            Plus a full stack application that is a React, Spring RESTful services, \n                            Spring Boot, Spring JPA Maven, Hibernate, MySql DB. As well as a some code to parse xml and insert record\n                            into the database and also create the nested xml.</p>\n                      </div>\n                    </div>\n                  </article>\n                  <article className=\"timeline-entry animate-box\" data-animate-effect=\"fadeInTop\">\n                    <div className=\"timeline-entry-inner\">\n                      <div className=\"timeline-icon color-4\">\n                        <i className=\"icon-pen2\" />\n                      </div>\n                      <div className=\"timeline-label\">\n                        <h2>Cyberdata Technologies<span> June 1, 2019 - March 1,2020  Java Developer</span></h2>\n                        <p>Developer for Inspector General Evaluation Management System (IGEMS web application\n                           Coded changes based on requirements by Air Force Material Command using java 7 HTML, CSS and JavaScript. Created JUnits for testing. Analyze code for dead code and well as possible re-factoring.\n                           Developed webservices and provided guidance on new technologies to streamline the development process.</p>\n                      </div>\n                    </div>\n                  </article>\n                  <article className=\"timeline-entry animate-box\" data-animate-effect=\"fadeInLeft\">\n                    <div className=\"timeline-entry-inner\">\n                      <div className=\"timeline-icon color-5\">\n                        <i className=\"icon-pen2\" />\n                      </div>\n                      <div className=\"timeline-label\">\n                        <h2>Nationwide Financial<span> July 20,2015-Nov 2018– IT Specialist/Application Development</span></h2>\n                        <p>Participated in migration from legacy system to a web based solution. Wrote RESTful services for retirement plan administration as well as \n                        for participant loans. \n                        Services were new loans, refinance loans, loan amortization schedule, if the participant is eligible for a loan are a few examples. \n                        Provided problem detection and resolution for a large distributed transactional system that is written in java 7. \n                        The system consists of a java swing application as well as batch processing during the night that is written with java code as well. \n                        Currently the swing UI is being replaced with a web application using JavaScript, CSS, Html as well as Angular. My responsibilities \n                        for that application were the same as the swing UI just with different technology. \n                        Data is stored in an Oracle 12 database. I used SQL to retrieve data as well as analyze and fix if needed </p> \n                      </div>\n                    </div>\n                  </article>\n                  <article className=\"timeline-entry begin animate-box\" data-animate-effect=\"fadeInBottom\">\n                    <div className=\"timeline-entry-inner\">\n                      <div className=\"timeline-icon color-none\">\n                      </div>\n                    </div>\n                  </article>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar';\n \nimport About from './components/About';\nimport TimeLine from './components/TimeLine';\n\nclass App extends Component {\n  render() {\n    return (\n    \t      <div id=\"colorlib-page\">\n    \t        <div id=\"container-wrap\">\n    \t         \t<Sidebar></Sidebar>\n    \t\t\t\t\t<div id=\"colorlib-main\">  \t\t\t\t\t\t \n    \t\t\t\t\t\t<About></About>\n    \t\t\t\t\t\t<TimeLine></TimeLine>\n    \t          \t</div>\n    \t      \t</div>\n    \t      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}